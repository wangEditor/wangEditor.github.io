import{_ as i,r as c,o as r,c as l,a as s,b as a,w as o,F as u,e,d as n}from"./app.13e4dd2e.js";const d={},k=e(`<h1 id="editor-api" tabindex="-1"><a class="header-anchor" href="#editor-api" aria-hidden="true">#</a> Editor API</h1><h2 id="config-api" tabindex="-1"><a class="header-anchor" href="#config-api" aria-hidden="true">#</a> Config API</h2><h3 id="getconfig" tabindex="-1"><a class="header-anchor" href="#getconfig" aria-hidden="true">#</a> getConfig</h3><p>Get all editor&#39;s default config.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="getmenuconfig" tabindex="-1"><a class="header-anchor" href="#getmenuconfig" aria-hidden="true">#</a> getMenuConfig</h3>`,6),h=n("Get one menu default config by key, see "),m=n("Menu config"),b=n("."),g=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getMenuConfig</span><span class="token punctuation">(</span>menuKey<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="getallmenukeys" tabindex="-1"><a class="header-anchor" href="#getallmenukeys" aria-hidden="true">#</a> getAllMenuKeys</h3><p>Get all editor&#39;s embed menus keys.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getAllMenuKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="alert" tabindex="-1"><a class="header-anchor" href="#alert" aria-hidden="true">#</a> alert</h3>`,5),v=n("Trigger editor's alert, you can config it by "),f=n("customAlert"),y=n("."),x=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u8BEF\u4FE1\u606F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="content-api" tabindex="-1"><a class="header-anchor" href="#content-api" aria-hidden="true">#</a> Content API</h2><h3 id="handletab" tabindex="-1"><a class="header-anchor" href="#handletab" aria-hidden="true">#</a> handleTab</h3><p>Define behavior when tap <code>tab</code> key.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function-variable function">handleTab</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> editor<span class="token punctuation">.</span><span class="token function">insertText</span><span class="token punctuation">(</span><span class="token string">&#39;    &#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="gethtml" tabindex="-1"><a class="header-anchor" href="#gethtml" aria-hidden="true">#</a> getHtml</h3><p><code>editor.getHtml()</code> return <strong>unformatted</strong> html string.</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>head<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>hello <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>word<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,8),_=n("You can format html by yourself, use "),w={href:"https://www.npmjs.com/package/xml-formatter",target:"_blank",rel:"noopener noreferrer"},S=n("xml-formatter"),T=n("."),P=e(`<h3 id="gettext" tabindex="-1"><a class="header-anchor" href="#gettext" aria-hidden="true">#</a> getText</h3><p>Get editor&#39;s plain text.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> text <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isempty" tabindex="-1"><a class="header-anchor" href="#isempty" aria-hidden="true">#</a> isEmpty</h3><p>Determine whether the editor is empty (just has an empty paragraph)</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>This method can only identify an empty paragraph. If you want more info, use <code>editor.getText()</code> or <code>editor.getHtml()</code>.</p></div><h3 id="getselectiontext" tabindex="-1"><a class="header-anchor" href="#getselectiontext" aria-hidden="true">#</a> getSelectionText</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getSelectionText</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="getelemsbytype" tabindex="-1"><a class="header-anchor" href="#getelemsbytype" aria-hidden="true">#</a> getElemsByType</h3><p>Get all elements in editor by type.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getElemsByType</span><span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">)</span> <span class="token comment">// all images</span>
editor<span class="token punctuation">.</span><span class="token function">getElemsByType</span><span class="token punctuation">(</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">)</span> <span class="token comment">// all links</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="getelemsbytypeprefix" tabindex="-1"><a class="header-anchor" href="#getelemsbytypeprefix" aria-hidden="true">#</a> getElemsByTypePrefix</h3><p>Get all elements in editor by type prefix.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getElemsByTypePrefix</span><span class="token punctuation">(</span><span class="token string">&#39;header&#39;</span><span class="token punctuation">)</span> <span class="token comment">// all header: header1 header2 header3...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="deletebackward" tabindex="-1"><a class="header-anchor" href="#deletebackward" aria-hidden="true">#</a> deleteBackward</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">deleteBackward</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="deleteforward" tabindex="-1"><a class="header-anchor" href="#deleteforward" aria-hidden="true">#</a> deleteForward</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">deleteForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="deletefragment" tabindex="-1"><a class="header-anchor" href="#deletefragment" aria-hidden="true">#</a> deleteFragment</h3><p>Delete all selected content.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">deleteFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="getfragment" tabindex="-1"><a class="header-anchor" href="#getfragment" aria-hidden="true">#</a> getFragment</h3><p>Get selected content, JSON format.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="insertbreak" tabindex="-1"><a class="header-anchor" href="#insertbreak" aria-hidden="true">#</a> insertBreak</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">insertBreak</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="inserttext" tabindex="-1"><a class="header-anchor" href="#inserttext" aria-hidden="true">#</a> insertText</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">insertText</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="dangerouslyinserthtml" tabindex="-1"><a class="header-anchor" href="#dangerouslyinserthtml" aria-hidden="true">#</a> dangerouslyInsertHtml</h3><p>Insert HTML string, but it&#39;s dangerous. There is no guarantee of complete consistency.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">dangerouslyInsertHtml</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1&gt;Header1&lt;/h1&gt;&lt;p&gt;Hello &lt;b&gt;word&lt;/b&gt;&lt;/p&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="rewrite-content" tabindex="-1"><a class="header-anchor" href="#rewrite-content" aria-hidden="true">#</a> Rewrite content</h3><p>You can write content by selection APIs and node APIs.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateTransforms <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

<span class="token comment">// Select all, then delete</span>
editor<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
editor<span class="token punctuation">.</span><span class="token function">deleteFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 1. Insert HTML format</span>
<span class="token comment">// 1.1 Change type of first element</span>
SlateTransforms<span class="token punctuation">.</span><span class="token function">setNodes</span><span class="token punctuation">(</span>editor<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;paragraph&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token string">&#39;highest&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 1.2 Insert your content</span>
editor<span class="token punctuation">.</span><span class="token function">dangerouslyInsertHtml</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;your text&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// // 2. Insert JSON format</span>
<span class="token comment">// // 2.1 Insert your content</span>
<span class="token comment">// SlateTransforms.insertNodes(editor, [</span>
<span class="token comment">//   { type: &#39;paragraph&#39;, children: [{ text: &#39;your text 1&#39; }] },</span>
<span class="token comment">//   { type: &#39;paragraph&#39;, children: [{ text: &#39;your text 2&#39; }] }</span>
<span class="token comment">// ])</span>
<span class="token comment">// // 2.2 Delete the first paragraph (optional)</span>
<span class="token comment">// SlateTransforms.removeNodes(editor, { at: [0] })</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="undo" tabindex="-1"><a class="header-anchor" href="#undo" aria-hidden="true">#</a> undo</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="redo" tabindex="-1"><a class="header-anchor" href="#redo" aria-hidden="true">#</a> redo</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">redo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="node-api" tabindex="-1"><a class="header-anchor" href="#node-api" aria-hidden="true">#</a> Node API</h2>`,42),E=n("Please learn the editor "),I=n("content node structure standard"),N=n(" first."),M=e(`<h3 id="insertnode" tabindex="-1"><a class="header-anchor" href="#insertnode" aria-hidden="true">#</a> insertNode</h3><p>Insert a node in selection.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;paragraph&#39;</span><span class="token punctuation">,</span> children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;simple text&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
editor<span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="insertnodes" tabindex="-1"><a class="header-anchor" href="#insertnodes" aria-hidden="true">#</a> insertNodes</h3><p>Insert many nodes in selection.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateTransforms <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

<span class="token keyword">const</span> node1 <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;paragraph&#39;</span><span class="token punctuation">,</span> children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;aaa&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> node2 <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;paragraph&#39;</span><span class="token punctuation">,</span> children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;bbb&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> nodeList <span class="token operator">=</span> <span class="token punctuation">[</span>node1<span class="token punctuation">,</span> node2<span class="token punctuation">]</span>

SlateTransforms<span class="token punctuation">.</span><span class="token function">insertNodes</span><span class="token punctuation">(</span>editor<span class="token punctuation">,</span> nodeList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="removenodes" tabindex="-1"><a class="header-anchor" href="#removenodes" aria-hidden="true">#</a> removeNodes</h3><p>Remove all nodes in selection.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateTransforms <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

SlateTransforms<span class="token punctuation">.</span><span class="token function">removeNodes</span><span class="token punctuation">(</span>editor<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="get-selected-nodes" tabindex="-1"><a class="header-anchor" href="#get-selected-nodes" aria-hidden="true">#</a> Get selected nodes</h3>`,10),j=n("Use "),A=s("code",null,"SlateEditor.nodes",-1),q=n(" to get selected nodes, see "),O=s("code",null,"Editor.nodes",-1),D=n(" API in "),F={href:"https://docs.slatejs.org/",target:"_blank",rel:"noopener noreferrer"},C=n("Slate.js doc"),B=n("."),G=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateEditor<span class="token punctuation">,</span> SlateElement<span class="token punctuation">,</span> SlateNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

<span class="token keyword">const</span> nodeEntries <span class="token operator">=</span> SlateEditor<span class="token punctuation">.</span><span class="token function">nodes</span><span class="token punctuation">(</span>editor<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">match</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> SlateNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>SlateElement<span class="token punctuation">.</span><span class="token function">isElement</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;paragraph&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token comment">// match paragraph</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    universal<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>nodeEntries <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;No selected paragraphs&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> nodeEntry <span class="token keyword">of</span> nodeEntries<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>node<span class="token punctuation">,</span> path<span class="token punctuation">]</span> <span class="token operator">=</span> nodeEntry
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;selected node&#39;</span><span class="token punctuation">,</span> node<span class="token punctuation">)</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;cur path&#39;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="setnodes" tabindex="-1"><a class="header-anchor" href="#setnodes" aria-hidden="true">#</a> setNodes</h3><p>Set node props in selection</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateTransforms <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

SlateTransforms<span class="token punctuation">.</span><span class="token function">setNodes</span><span class="token punctuation">(</span>editor<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// @ts-ignore</span>
  textAlign<span class="token operator">:</span> <span class="token string">&#39;right&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  mode<span class="token operator">:</span> <span class="token string">&#39;highest&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="getparentnode" tabindex="-1"><a class="header-anchor" href="#getparentnode" aria-hidden="true">#</a> getParentNode</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> parentNode <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">getParentNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token comment">// return a node or null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="todomnode" tabindex="-1"><a class="header-anchor" href="#todomnode" aria-hidden="true">#</a> toDOMNode</h3><p>Get DOM node by a slate node.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> elem <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">toDOMNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token comment">// return HTMLElement</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isinline" tabindex="-1"><a class="header-anchor" href="#isinline" aria-hidden="true">#</a> isInline</h3>`,10),L=n("Inline's concept, see "),H={href:"https://docs.slatejs.org/concepts/02-nodes",target:"_blank",rel:"noopener noreferrer"},R=n("Slate.js doc"),V=n("."),Y=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> inline <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">isInline</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isvoid" tabindex="-1"><a class="header-anchor" href="#isvoid" aria-hidden="true">#</a> isVoid</h3>`,2),K=n("Void's concept, See "),J={href:"https://docs.slatejs.org/concepts/02-nodes",target:"_blank",rel:"noopener noreferrer"},U=n("Slate.js doc"),z=n("."),Q=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">isVoid</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="istext" tabindex="-1"><a class="header-anchor" href="#istext" aria-hidden="true">#</a> isText</h3>`,2),W=n("Text's concept, See "),X={href:"https://docs.slatejs.org/concepts/02-nodes",target:"_blank",rel:"noopener noreferrer"},Z=n("Slate.js doc"),$=n("."),nn=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateText <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

SlateText<span class="token punctuation">.</span><span class="token function">isText</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token comment">// true/false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="iselement" tabindex="-1"><a class="header-anchor" href="#iselement" aria-hidden="true">#</a> isElement</h3>`,2),sn=n("Element's concept, See "),an={href:"https://docs.slatejs.org/concepts/02-nodes",target:"_blank",rel:"noopener noreferrer"},en=n("Slate.js doc"),tn=n("."),pn=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

SlateElement<span class="token punctuation">.</span><span class="token function">isElement</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token comment">// true/false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="addmark" tabindex="-1"><a class="header-anchor" href="#addmark" aria-hidden="true">#</a> addMark</h3><p>Mark is text style, like bold italic...</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">addMark</span><span class="token punctuation">(</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
editor<span class="token punctuation">.</span><span class="token function">addMark</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#999&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="removemark" tabindex="-1"><a class="header-anchor" href="#removemark" aria-hidden="true">#</a> removeMark</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">removeMark</span><span class="token punctuation">(</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">)</span> <span class="token comment">// cancel bold</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="marks" tabindex="-1"><a class="header-anchor" href="#marks" aria-hidden="true">#</a> marks</h3><p>Get selected text marks.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateEditor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

SlateEditor<span class="token punctuation">.</span><span class="token function">marks</span><span class="token punctuation">(</span>editor<span class="token punctuation">)</span> <span class="token comment">// like { bold: true, color: &quot;#595959&quot; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="dom-api" tabindex="-1"><a class="header-anchor" href="#dom-api" aria-hidden="true">#</a> DOM API</h2><h3 id="id-prop" tabindex="-1"><a class="header-anchor" href="#id-prop" aria-hidden="true">#</a> id prop</h3><p>Editor id, unique.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span>id <span class="token comment">// like &#39;wangEditor-1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isfullscreen-prop" tabindex="-1"><a class="header-anchor" href="#isfullscreen-prop" aria-hidden="true">#</a> isFullScreen prop</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span>isFullScreen <span class="token comment">// true/false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="focus" tabindex="-1"><a class="header-anchor" href="#focus" aria-hidden="true">#</a> focus</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="blur" tabindex="-1"><a class="header-anchor" href="#blur" aria-hidden="true">#</a> blur</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isfocused" tabindex="-1"><a class="header-anchor" href="#isfocused" aria-hidden="true">#</a> isFocused</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// true/false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="updateview" tabindex="-1"><a class="header-anchor" href="#updateview" aria-hidden="true">#</a> updateView</h3><p>Force update view and re-render DOM.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">updateView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>updateView</code> is an inner API, not recommended for users.</p></div><h3 id="scrolltoelem" tabindex="-1"><a class="header-anchor" href="#scrolltoelem" aria-hidden="true">#</a> scrollToElem</h3><p>Scroll to designated DOM element, like html anchor.<br> You can use <code>toDOMNode</code> to get DOM element and it&#39;s id.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">scrollToElem</span><span class="token punctuation">(</span>elemId<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="showprogressbar" tabindex="-1"><a class="header-anchor" href="#showprogressbar" aria-hidden="true">#</a> showProgressBar</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">showProgressBar</span><span class="token punctuation">(</span>progress<span class="token punctuation">)</span> <span class="token comment">// progress is number 0-100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="hidepanelormodal" tabindex="-1"><a class="header-anchor" href="#hidepanelormodal" aria-hidden="true">#</a> hidePanelOrModal</h3><p>Hide current panel dropList or modal.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">hidePanelOrModal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="fullscreen" tabindex="-1"><a class="header-anchor" href="#fullscreen" aria-hidden="true">#</a> fullScreen</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">fullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,35),on={class:"custom-container tip"},cn=s("p",{class:"custom-container-title"},"TIP",-1),rn=n("Need to standard your html structure, see "),ln=n("Getting started"),un=n("."),dn=e(`<h3 id="unfullscreen" tabindex="-1"><a class="header-anchor" href="#unfullscreen" aria-hidden="true">#</a> unFullScreen</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">unFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="disable" tabindex="-1"><a class="header-anchor" href="#disable" aria-hidden="true">#</a> disable</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isdisabled" tabindex="-1"><a class="header-anchor" href="#isdisabled" aria-hidden="true">#</a> isDisabled</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">isDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// true/false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="enable" tabindex="-1"><a class="header-anchor" href="#enable" aria-hidden="true">#</a> enable</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>Destroy the editor and it&#39;s toolbar.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>destroy</code> can only remove the DOM element, remove global event binding.</p></div><h3 id="get-editable-container" tabindex="-1"><a class="header-anchor" href="#get-editable-container" aria-hidden="true">#</a> Get Editable Container</h3><p>Get editable container DOM element.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getEditableContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="selection-api" tabindex="-1"><a class="header-anchor" href="#selection-api" aria-hidden="true">#</a> selection API</h2>`,16),kn=n("You may see "),hn={href:"https://docs.slatejs.org/concepts/03-locations",target:"_blank",rel:"noopener noreferrer"},mn=n("Slate Location doc"),bn=n(" API first."),gn=e(`<h3 id="selection-prop" tabindex="-1"><a class="header-anchor" href="#selection-prop" aria-hidden="true">#</a> selection prop</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span>selection <span class="token comment">// selection or null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>selection&#39;s format like:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;anchor&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span><span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;focus&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span><span class="token number">10</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> select</h3><p>Select a designated location.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> newSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
  anchor<span class="token operator">:</span> <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> offset<span class="token operator">:</span><span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  focus<span class="token operator">:</span> <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> offset<span class="token operator">:</span><span class="token number">10</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
editor<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>newSelection<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="selectall" tabindex="-1"><a class="header-anchor" href="#selectall" aria-hidden="true">#</a> selectAll</h3><p>Select all content.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="deselect" tabindex="-1"><a class="header-anchor" href="#deselect" aria-hidden="true">#</a> deselect</h3><p>Cancel select.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">deselect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="move" tabindex="-1"><a class="header-anchor" href="#move" aria-hidden="true">#</a> move</h3><p>Move cursor.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// Move cursor 3 characters</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="movereverse" tabindex="-1"><a class="header-anchor" href="#movereverse" aria-hidden="true">#</a> moveReverse</h3><p>Reverse move cursor.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">moveReverse</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// Reverse move cursor 2 characters</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="restoreselection" tabindex="-1"><a class="header-anchor" href="#restoreselection" aria-hidden="true">#</a> restoreSelection</h3><p>Restore prev selection which is not null.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">restoreSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isselectedall" tabindex="-1"><a class="header-anchor" href="#isselectedall" aria-hidden="true">#</a> isSelectedAll</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">isSelectedAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// true/false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="getselectionposition" tabindex="-1"><a class="header-anchor" href="#getselectionposition" aria-hidden="true">#</a> getSelectionPosition</h3><p>Get text selection position data (like <code>top</code> <code>left</code> <code>right</code> <code>bottom</code>).</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getSelectionPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// eg. { left: &quot;80.15px&quot;, top: &quot;116px&quot; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS: This position is <strong>relative to editor DOM node</strong>, not <code>&lt;body&gt;</code>.<br> You can get editor DOM node&#39;s position by <code>editor.getEditableContainer().getBoundingClientRect()</code>, then compute position which is relative to <code>&lt;body&gt;</code>.</p><h3 id="getnodeposition" tabindex="-1"><a class="header-anchor" href="#getnodeposition" aria-hidden="true">#</a> getNodePosition</h3><p>Get selected node position data (like <code>top</code> <code>left</code> <code>right</code> <code>bottom</code>).</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">getNodePosition</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token comment">// eg. { left: &quot;80.15px&quot;, top: &quot;116px&quot; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS: This position is <strong>relative to editor DOM node</strong>, not <code>&lt;body&gt;</code>.<br> You can get editor DOM node&#39;s position by <code>editor.getEditableContainer().getBoundingClientRect()</code>, then compute position which is relative to <code>&lt;body&gt;</code>.</p><h2 id="custom-event" tabindex="-1"><a class="header-anchor" href="#custom-event" aria-hidden="true">#</a> Custom event</h2>`,33),vn=n("wangEditor use "),fn={href:"https://www.npmjs.com/package/event-emitter",target:"_blank",rel:"noopener noreferrer"},yn=n("event-emitter"),xn=n(" to extend custom events."),_n=e(`<h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;event-key&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;event-key&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="once" tabindex="-1"><a class="header-anchor" href="#once" aria-hidden="true">#</a> once</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;event-key&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;event-key&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="embedded-events" tabindex="-1"><a class="header-anchor" href="#embedded-events" aria-hidden="true">#</a> Embedded events</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editor<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;fullScreen&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fullScreen&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
editor<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;unFullScreen&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;unFullScreen&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
editor<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
editor<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;modalOrPanelShow&#39;</span><span class="token punctuation">,</span> modalOrPanel <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>modalOrPanel<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
editor<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;modalOrPanelHide&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;modalOrPanelHide&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="use-slate-js-api" tabindex="-1"><a class="header-anchor" href="#use-slate-js-api" aria-hidden="true">#</a> Use Slate.js API</h2>`,11),wn=n("wangEditor is based on "),Sn={href:"https://docs.slatejs.org/",target:"_blank",rel:"noopener noreferrer"},Tn=n("slate.js"),Pn=n(" but React. You may use Slate.js API to operate the editor."),En=s("h3",{id:"transforms-api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#transforms-api","aria-hidden":"true"},"#"),n(" Transforms API")],-1),In=n("See "),Nn={href:"https://docs.slatejs.org/api/transforms",target:"_blank",rel:"noopener noreferrer"},Mn=n("slate Transforms API"),jn=n(" first."),An=e(`<p>You could get slate <code>Transforms</code> object from <code>@wangeditor/editor</code>, no need to install <code>slate</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateTransforms <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="node-editor-api" tabindex="-1"><a class="header-anchor" href="#node-editor-api" aria-hidden="true">#</a> Node Editor API</h3>`,3),qn=n("See "),On={href:"https://docs.slatejs.org/api/nodes",target:"_blank",rel:"noopener noreferrer"},Dn=n("slate Node API"),Fn=n(" first."),Cn=e(`<p>You could get slate Node objects from <code>@wangeditor/editor</code>, no need to install <code>slate</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateEditor<span class="token punctuation">,</span> SlateNode<span class="token punctuation">,</span> SlateElement<span class="token punctuation">,</span> SlateText <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="location-api" tabindex="-1"><a class="header-anchor" href="#location-api" aria-hidden="true">#</a> Location API</h3>`,3),Bn=n("See "),Gn={href:"https://docs.slatejs.org/api/locations",target:"_blank",rel:"noopener noreferrer"},Ln=n("slate Location API"),Hn=n(" first."),Rn=e(`<p>You could get slate Location objects from <code>@wangeditor/editor</code>, no need to install <code>slate</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SlateLocation<span class="token punctuation">,</span> SlatePath<span class="token punctuation">,</span> SlatePoint<span class="token punctuation">,</span> SlateRange <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,2);function Vn(Yn,Kn){const p=c("RouterLink"),t=c("ExternalLinkIcon");return r(),l(u,null,[k,s("p",null,[h,a(p,{to:"/en/v5/menu-config.html"},{default:o(()=>[m]),_:1}),b]),g,s("p",null,[v,a(p,{to:"/en/v5/menu-config.html"},{default:o(()=>[f]),_:1}),y]),x,s("p",null,[_,s("a",w,[S,a(t)]),T]),P,s("p",null,[E,a(p,{to:"/en/v5/node-define.html"},{default:o(()=>[I]),_:1}),N]),M,s("p",null,[j,A,q,O,D,s("a",F,[C,a(t)]),B]),G,s("p",null,[L,s("a",H,[R,a(t)]),V]),Y,s("p",null,[K,s("a",J,[U,a(t)]),z]),Q,s("p",null,[W,s("a",X,[Z,a(t)]),$]),nn,s("p",null,[sn,s("a",an,[en,a(t)]),tn]),pn,s("div",on,[cn,s("p",null,[rn,a(p,{to:"/en/v5/getting-started.html"},{default:o(()=>[ln]),_:1}),un])]),dn,s("p",null,[kn,s("a",hn,[mn,a(t)]),bn]),gn,s("p",null,[vn,s("a",fn,[yn,a(t)]),xn]),_n,s("p",null,[wn,s("a",Sn,[Tn,a(t)]),Pn]),En,s("p",null,[In,s("a",Nn,[Mn,a(t)]),jn]),An,s("p",null,[qn,s("a",On,[Dn,a(t)]),Fn]),Cn,s("p",null,[Bn,s("a",Gn,[Ln,a(t)]),Hn]),Rn],64)}var Un=i(d,[["render",Vn],["__file","API.html.vue"]]);export{Un as default};
