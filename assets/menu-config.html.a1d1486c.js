import{_ as t,r as o,o as c,c as l,a as s,b as p,F as r,e as a,d as n}from"./app.9485a9bd.js";const i={},u=a(`<h1 id="menu-config" tabindex="-1"><a class="header-anchor" href="#menu-config" aria-hidden="true">#</a> Menu Config</h1><h2 id="general-way" tabindex="-1"><a class="header-anchor" href="#general-way" aria-hidden="true">#</a> General Way</h2><h3 id="get-a-menu-key" tabindex="-1"><a class="header-anchor" href="#get-a-menu-key" aria-hidden="true">#</a> Get a Menu Key</h3><p>Use <code>editor.getAllMenuKeys()</code> to checkout all menus key, and find your menu key.</p><h3 id="get-the-menu-default-config" tabindex="-1"><a class="header-anchor" href="#get-the-menu-default-config" aria-hidden="true">#</a> Get the Menu Default Config</h3><p>When you find a menu key, you can get this menu&#39;s default config.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>editor<span class="token punctuation">.</span><span class="token function">getMenuConfig</span><span class="token punctuation">(</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \`uploadImage\` is a menu key</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="change-the-menu-config" tabindex="-1"><a class="header-anchor" href="#change-the-menu-config" aria-hidden="true">#</a> Change the Menu Config</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> IEditorConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

<span class="token comment">// add a MENU_CONF prop</span>
<span class="token keyword">const</span> editorConfig<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>IEditorConfig<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
<span class="token comment">// const editorConfig = {                       // JS syntax</span>
    <span class="token constant">MENU_CONF</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token comment">// other props...</span>
<span class="token punctuation">}</span>

<span class="token comment">// change \`uploadImage\` menu config</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    server<span class="token operator">:</span> <span class="token string">&#39;/api/upload-image&#39;</span><span class="token punctuation">,</span>
    fieldName<span class="token operator">:</span> <span class="token string">&#39;custom-field-name&#39;</span>
    <span class="token comment">// other config...</span>
<span class="token punctuation">}</span>

<span class="token comment">// change other menu&#39;s config</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;otherMenuKey&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// config...</span>
<span class="token punctuation">}</span>

<span class="token comment">// create editor, or Vue React &lt;Editor&gt; component</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="color" tabindex="-1"><a class="header-anchor" href="#color" aria-hidden="true">#</a> Color</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// font colors</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    colors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#333&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#666&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// background colors</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;bgColor&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    colors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#333&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#666&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="font-size" tabindex="-1"><a class="header-anchor" href="#font-size" aria-hidden="true">#</a> Font Size</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;fontSize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    fontSizeList<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// Support two format</span>
        <span class="token comment">//   1. string</span>
        <span class="token comment">//   2. object like { name: &#39;xxx&#39;, value: &#39;xxx&#39; }</span>

        <span class="token string">&#39;12px&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;16px&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;24px&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;24px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&#39;40px&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="font-family" tabindex="-1"><a class="header-anchor" href="#font-family" aria-hidden="true">#</a> Font-Family</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Some fonts are not commercially available.</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;fontFamily&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    fontFamilyList<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// Support two format</span>
        <span class="token comment">//   1. string</span>
        <span class="token comment">//   2. object like { name: &#39;xxx&#39;, value: &#39;xxx&#39; }</span>

        <span class="token string">&#39;Arial&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Tahoma&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Verdana&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Tahoma&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;Tahoma&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="line-height" tabindex="-1"><a class="header-anchor" href="#line-height" aria-hidden="true">#</a> Line Height</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;lineHeight&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    lineHeightList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2.5&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="emotion" tabindex="-1"><a class="header-anchor" href="#emotion" aria-hidden="true">#</a> Emotion</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;emotion&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    emotions<span class="token operator">:</span> <span class="token string">&#39;\u{1F600} \u{1F603} \u{1F604} \u{1F601} \u{1F606} \u{1F605} \u{1F602} \u{1F923} \u{1F60A} \u{1F607} \u{1F642} \u{1F643} \u{1F609}&#39;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u6570\u7EC4</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="link" tabindex="-1"><a class="header-anchor" href="#link" aria-hidden="true">#</a> Link</h2><ul><li><code>checkLink</code> Check link url</li><li><code>parseLinkUrl</code> Parse link url</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">customCheckLinkFn</span><span class="token punctuation">(</span>text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
<span class="token comment">// function customCheckLinkFn(text, url) {                                             // JS syntax</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Link must includes http/https&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>

    <span class="token comment">// The following three way, you should choose one:</span>
    <span class="token comment">// 1. return true. Means check successful, editor will insert this link</span>
    <span class="token comment">// 2. return a string. Means check failed, need to alert some text info</span>
    <span class="token comment">// 3. return undefined. Means check failed, no need to alert some text info</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">customParseLinkUrl</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
<span class="token comment">// function customParseLinkUrl(url) {                // JS syntax</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> url
<span class="token punctuation">}</span>

<span class="token comment">// insertLink menu config</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;insertLink&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    checkLink<span class="token operator">:</span> customCheckLinkFn<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
    parseLinkUrl<span class="token operator">:</span> customParseLinkUrl<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
<span class="token punctuation">}</span>
<span class="token comment">// editLink menu config</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;editLink&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    checkLink<span class="token operator">:</span> customCheckLinkFn<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
    parseLinkUrl<span class="token operator">:</span> customParseLinkUrl<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> Image</h2><p>If you use Typescript, you need define image element type.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// create a \`.d.ts\` file</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> SlateElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">ImageElement</span> <span class="token operator">=</span> SlateElement <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    src<span class="token operator">:</span> <span class="token builtin">string</span>
    alt<span class="token operator">:</span> <span class="token builtin">string</span>
    url<span class="token operator">:</span> <span class="token builtin">string</span>
    href<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Image menu config.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">customCheckImageFn</span><span class="token punctuation">(</span>src<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> alt<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
<span class="token comment">// function customCheckImageFn(src, alt, url) {                                                     // JS syntax</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Image src must start width http/https&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>

    <span class="token comment">// The following three way, you should choose one:</span>
    <span class="token comment">// 1. return true. Means check successful, editor will insert this image</span>
    <span class="token comment">// 2. return a string. Means check failed, need to alert some text info</span>
    <span class="token comment">// 3. return undefined. Means check failed, no need to alert some text info</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">customParseImageSrc</span><span class="token punctuation">(</span>src<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
<span class="token comment">// function customParseImageSrc(src) {               // JS syntax</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> src
<span class="token punctuation">}</span>

<span class="token comment">// insertImage menu config</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;insertImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">onInsertedImage</span><span class="token punctuation">(</span>imageNode<span class="token operator">:</span> ImageElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// onInsertedImage(imageNode) {                    // JS syntax</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>imageNode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

        <span class="token keyword">const</span> <span class="token punctuation">{</span> src<span class="token punctuation">,</span> alt<span class="token punctuation">,</span> url<span class="token punctuation">,</span> href <span class="token punctuation">}</span> <span class="token operator">=</span> imageNode
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;inserted image&#39;</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> alt<span class="token punctuation">,</span> url<span class="token punctuation">,</span> href<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    checkImage<span class="token operator">:</span> customCheckImageFn<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
    parseImageSrc<span class="token operator">:</span> customParseImageSrc<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
<span class="token punctuation">}</span>
<span class="token comment">// editImage menu config</span>
editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;editImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">onUpdatedImage</span><span class="token punctuation">(</span>imageNode<span class="token operator">:</span> ImageElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// onUpdatedImage(imageNode) {                     // JS syntax</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>imageNode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

        <span class="token keyword">const</span> <span class="token punctuation">{</span> src<span class="token punctuation">,</span> alt<span class="token punctuation">,</span> url <span class="token punctuation">}</span> <span class="token operator">=</span> imageNode
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;updated image&#39;</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> alt<span class="token punctuation">,</span> url<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    checkImage<span class="token operator">:</span> customCheckImageFn<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
    parseImageSrc<span class="token operator">:</span> customParseImageSrc<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h2 id="upload-image" tabindex="-1"><a class="header-anchor" href="#upload-image" aria-hidden="true">#</a> Upload Image</h2>`,29),k=n("See "),m={href:"https://github.com/wangeditor-team/server",target:"_blank",rel:"noopener noreferrer"},b=n("demo"),d=n("."),g=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// menu config...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="server-address" tabindex="-1"><a class="header-anchor" href="#server-address" aria-hidden="true">#</a> Server Address</h3><p>Required.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
     server<span class="token operator">:</span> <span class="token string">&#39;/api/upload&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>If uploaded successfully, the server must return data like this format:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;errno&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// it&#39;s number, not string</span>
    <span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> <span class="token comment">// image src, required</span>
        <span class="token string-property property">&quot;alt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yyy&quot;</span><span class="token punctuation">,</span> <span class="token comment">// image alt, optional</span>
        <span class="token string-property property">&quot;href&quot;</span><span class="token operator">:</span> <span class="token string">&quot;zzz&quot;</span> <span class="token comment">// image link, optional</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>If uploaded failed, the server must return data like this format:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;errno&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// number, not equal 0</span>
    <span class="token string-property property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&#39;your failed message&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If your server&#39;s response body is not above format, you can use the following <code>customInsert</code>.</p></div><h3 id="basic-config" tabindex="-1"><a class="header-anchor" href="#basic-config" aria-hidden="true">#</a> Basic Config</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// form-data fieldName \uFF0Cdefault &#39;wangeditor-uploaded-image&#39;</span>
    fieldName<span class="token operator">:</span> <span class="token string">&#39;your-custom-name&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// max size of one file</span>
    maxFileSize<span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">// 1M</span>

    <span class="token comment">// max length of uploaded files</span>
    maxNumberOfFiles<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>

    <span class="token comment">// file types, default \`[&#39;image/*&#39;]\`. If unwanted, you can set []</span>
    allowedFileTypes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;image/*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token comment">// custom upload params, like token</span>
    meta<span class="token operator">:</span> <span class="token punctuation">{</span>
        token<span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
        otherKey<span class="token operator">:</span> <span class="token string">&#39;yyy&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// Embed meta in url, not in formData. Default is false</span>
    metaWithUrl<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>

    <span class="token comment">// custom http headers</span>
    headers<span class="token operator">:</span> <span class="token punctuation">{</span>
        Accept<span class="token operator">:</span> <span class="token string">&#39;text/x-json&#39;</span><span class="token punctuation">,</span>
        otherKey<span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// send cookie when cross-origin</span>
    withCredentials<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

    <span class="token comment">// timeout, default 10s</span>
    timeout<span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 5 \u79D2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="callbacks" tabindex="-1"><a class="header-anchor" href="#callbacks" aria-hidden="true">#</a> Callbacks</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">onBeforeUpload</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// onBeforeUpload(file) {      // JS syntax</span>
        <span class="token comment">// \`file\` is selected file, format like { key: file }</span>
        <span class="token keyword">return</span> file

        <span class="token comment">// You can return:</span>
        <span class="token comment">// 1. return the file object or a new file object. Editor will upload it.</span>
        <span class="token comment">// 2. return false. Stop upload this file.</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">onProgress</span><span class="token punctuation">(</span>progress<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// onProgress(progress) {        // JS syntax</span>
        <span class="token comment">// progress is a number 0-100</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span> progress<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// One file upload success</span>
    <span class="token function">onSuccess</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// TS syntax</span>
    <span class="token comment">// onSuccess(file, res) {             // JS syntax</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> uploaded</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// One file upload failed</span>
    <span class="token function">onFailed</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// TS syntax</span>
    <span class="token comment">// onFailed(file, res) {             // JS syntax</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> failed</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// upload error or timeout</span>
    <span class="token function">onError</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> err<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// onError(file, err, res) {               // JS syntax</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> error</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="custom-functions" tabindex="-1"><a class="header-anchor" href="#custom-functions" aria-hidden="true">#</a> Custom Functions</h3><p>If you use Type script, you should define a function type first.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">InsertFnType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> alt<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> href<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="custom-insert" tabindex="-1"><a class="header-anchor" href="#custom-insert" aria-hidden="true">#</a> Custom Insert</h4><p>If your server response body is not above format, you can use <code>customInsert</code> to insert image.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">customInsert</span><span class="token punctuation">(</span>res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> insertFn<span class="token operator">:</span> InsertFnType<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// customInsert(res, insertFn) {                   // JS syntax</span>

        <span class="token comment">// \`res\` is server response</span>

        <span class="token comment">// Get image&#39;s url, alt, href in res, and insert to editor</span>
        <span class="token function">insertFn</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> alt<span class="token punctuation">,</span> href<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="custom-upload" tabindex="-1"><a class="header-anchor" href="#custom-upload" aria-hidden="true">#</a> Custom Upload</h4><p>If you unwanted wangEditor&#39;s embedded upload function, you can use <code>customUpload</code> to upload images yourself.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">customUpload</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> insertFn<span class="token operator">:</span> InsertFnType<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// async customUpload(file, insertFn) {                    // JS syntax</span>

        <span class="token comment">// \`file\` is your selected file</span>

        <span class="token comment">// upload images yourself, and get image&#39;s url, alt, href</span>

        <span class="token comment">// insert image</span>
        <span class="token function">insertFn</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> alt<span class="token punctuation">,</span> href<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="custom-select-images" tabindex="-1"><a class="header-anchor" href="#custom-select-images" aria-hidden="true">#</a> Custom Select Images</h4><p>If you unwanted wangEditor&#39;s embedded select function, you can use <code>customBrowseAndUpload</code> to implement by yourself.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">customBrowseAndUpload</span><span class="token punctuation">(</span>insertFn<span class="token operator">:</span> InsertFnType<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// customBrowseAndUpload(insertFn) {             // JS syntax</span>
        <span class="token comment">// 1. select files by yourself</span>
        <span class="token comment">// 2. upload files, and get image&#39;s url, alt, href</span>
        <span class="token comment">// 3. insert image</span>
        <span class="token function">insertFn</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> alt<span class="token punctuation">,</span> href<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="base64-insert-images" tabindex="-1"><a class="header-anchor" href="#base64-insert-images" aria-hidden="true">#</a> Base64 insert images</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadImage&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// other props...</span>

    <span class="token comment">// If image&#39;s size less than this, then insert image by base64 format. Default 0.</span>
    base64LimitSize<span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token comment">// 5kb</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="get-deleted-images" tabindex="-1"><a class="header-anchor" href="#get-deleted-images" aria-hidden="true">#</a> Get Deleted Images</h3><p>This is a common requirement.<br> You upload an image to the server, then you delete this image. You want to get this deleted image and delete it from the server when you save content.</p><ul><li>Use <a href="#image">onInsertedImage</a> to collect all images, record to <code>imageList1</code></li><li>When you save content, use <code>editor.getElemsByType(&#39;image&#39;)</code> to get rest images, record to <code>imageList2</code></li><li>Diff <code>imageList1</code> and <code>imageList2</code>, then you will get deleted images</li></ul><p>You may wonder: If I can get this image when it just is deleted, but when save content?<br> You could not do this. Because the image which is deleted may restore by you <strong>redo</strong> or <strong>undo</strong> the editor.</p><h2 id="video" tabindex="-1"><a class="header-anchor" href="#video" aria-hidden="true">#</a> Video</h2><p>If you use Typescript, you need to define video element type first.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// create a \`.d.ts\` file</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> SlateElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@wangeditor/editor&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">VideoElement</span> <span class="token operator">=</span> SlateElement <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    src<span class="token operator">:</span> <span class="token builtin">string</span>
    poster<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Menu config.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">customCheckVideoFn</span><span class="token punctuation">(</span>src<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> poster<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
<span class="token comment">// function customCheckVideoFn(src, poster) {                                              // JS syntax</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Video src must start width http/https&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>

    <span class="token comment">// The following three way, you should choose one:</span>
    <span class="token comment">// 1. return true. Means check successful, editor will insert this video</span>
    <span class="token comment">// 2. return a string. Means check failed, need to alert some text info</span>
    <span class="token comment">// 3. return undefined. Means check failed, no need to alert some text info</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">customParseVideoSrc</span><span class="token punctuation">(</span>src<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
<span class="token comment">// function customParseVideoSrc(src) {               // JS syntax</span>
    <span class="token comment">// parse video src and return the new src</span>
    <span class="token keyword">return</span> newSrc
<span class="token punctuation">}</span>

editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;insertVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">onInsertedVideo</span><span class="token punctuation">(</span>videoNode<span class="token operator">:</span> VideoElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// onInsertedVideo(videoNode) {                    // JS syntax</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>videoNode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

        <span class="token keyword">const</span> <span class="token punctuation">{</span> src <span class="token punctuation">}</span> <span class="token operator">=</span> videoNode
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;inserted video&#39;</span><span class="token punctuation">,</span> src<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    checkVideo<span class="token operator">:</span> customCheckVideoFn<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
    parseVideoSrc<span class="token operator">:</span> customParseVideoSrc<span class="token punctuation">,</span> <span class="token comment">// support \`async function\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="upload-video" tabindex="-1"><a class="header-anchor" href="#upload-video" aria-hidden="true">#</a> Upload Video</h2>`,37),h=n("See "),f={href:"https://github.com/wangeditor-team/server",target:"_blank",rel:"noopener noreferrer"},y=n("demo"),v=n("."),x=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// menu config...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="server-address-1" tabindex="-1"><a class="header-anchor" href="#server-address-1" aria-hidden="true">#</a> Server Address</h3><p>Required.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
     server<span class="token operator">:</span> <span class="token string">&#39;/api/upload&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>If uploaded successfully, the server must return data like this format:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;errno&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// it&#39;s number, not string</span>
    <span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> <span class="token comment">// video src, required</span>
        <span class="token string-property property">&quot;poster&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx.png&quot;</span> <span class="token comment">// video poster image, optional</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// @wangeditor/editor &gt;= 5.1.8 support video poster</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>If uploaded failed, the server must return data like this format:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;errno&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// number, not equal 0</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;your failed message&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If your server&#39;s response body is not above format, you can use the following <code>customInsert</code>.</p></div><h3 id="basic-config-1" tabindex="-1"><a class="header-anchor" href="#basic-config-1" aria-hidden="true">#</a> Basic Config</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// form-data fieldName \uFF0Cdefault &#39;wangeditor-uploaded-video&#39;</span>
    fieldName<span class="token operator">:</span> <span class="token string">&#39;your-custom-name&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// max size of one file</span>
    maxFileSize<span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">// 5M</span>

    <span class="token comment">// max length of uploaded files</span>
    maxNumberOfFiles<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>

    <span class="token comment">// file types, default \`[&#39;video/*&#39;]\`. If unwanted, you can set []</span>
    allowedFileTypes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;video/*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token comment">// custom upload params, like token</span>
    meta<span class="token operator">:</span> <span class="token punctuation">{</span>
        token<span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
        otherKey<span class="token operator">:</span> <span class="token string">&#39;yyy&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// Embed meta in url, not in formData. Default is false</span>
    metaWithUrl<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>

    <span class="token comment">// custom http headers</span>
    headers<span class="token operator">:</span> <span class="token punctuation">{</span>
        Accept<span class="token operator">:</span> <span class="token string">&#39;text/x-json&#39;</span><span class="token punctuation">,</span>
        otherKey<span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// send cookie when cross-origin</span>
    withCredentials<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

    <span class="token comment">// timeout, default 30s</span>
    timeout<span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 5 \u79D2</span>

    <span class="token comment">// video do not support base64 format src.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="callbacks-1" tabindex="-1"><a class="header-anchor" href="#callbacks-1" aria-hidden="true">#</a> Callbacks</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">onBeforeUpload</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// onBeforeUpload(file) {      // JS syntax</span>
        <span class="token comment">// \`file\` is selected file, format like { key: file }</span>
        <span class="token keyword">return</span> file

        <span class="token comment">// You can return:</span>
        <span class="token comment">// 1. return the file object or a new file object. Editor will upload it.</span>
        <span class="token comment">// 2. return false. Stop upload this file.</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">onProgress</span><span class="token punctuation">(</span>progress<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// onProgress(progress) {       // JS syntax</span>
        <span class="token comment">// progress is a number 0-100</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span> progress<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// One file upload success</span>
    <span class="token function">onSuccess</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// onSuccess(file, res) {          // JS syntax</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> uploaded</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// One file upload failed</span>
    <span class="token function">onFailed</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// onFailed(file, res) {          // JS syntax</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> failed</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// upload error or timeout</span>
    <span class="token function">onError</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> err<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// onError(file, err, res) {                // JS syntax</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> error</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="custom-functions-1" tabindex="-1"><a class="header-anchor" href="#custom-functions-1" aria-hidden="true">#</a> Custom Functions</h3><p>If you use Type script, you should define a function type first.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">InsertFnType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> poster<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="custom-insert-1" tabindex="-1"><a class="header-anchor" href="#custom-insert-1" aria-hidden="true">#</a> Custom Insert</h4><p>If your server response body is not above format, you can use <code>customInsert</code> to insert video.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">customInsert</span><span class="token punctuation">(</span>res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> insertFn<span class="token operator">:</span> InsertFnType<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// TS syntax</span>
    <span class="token comment">// customInsert(res: any, insertFn: InsertFnType) {  // JS syntax</span>

        <span class="token comment">// \`res\` is server response</span>

        <span class="token comment">// Get video&#39;s url and poster in res, and insert to editor</span>
        <span class="token function">insertFn</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> poster<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="custom-upload-1" tabindex="-1"><a class="header-anchor" href="#custom-upload-1" aria-hidden="true">#</a> Custom Upload</h4><p>If you unwanted wangEditor&#39;s embedded upload function, you can use <code>customUpload</code> to upload videos yourself.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">customUpload</span><span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">,</span> insertFn<span class="token operator">:</span> InsertFnType<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// TS syntax</span>
    <span class="token comment">// async customUpload(file, insertFn) {                   // JS syntax</span>

        <span class="token comment">// \`file\` is your selected file</span>

        <span class="token comment">// upload videos yourself, and get video&#39;s url and poster</span>

        <span class="token comment">// insert video</span>
        <span class="token function">insertFn</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> poster<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="custom-select-videos" tabindex="-1"><a class="header-anchor" href="#custom-select-videos" aria-hidden="true">#</a> Custom Select Videos</h4><p>If you unwanted wangEditor&#39;s embedded select function, you can use <code>customBrowseAndUpload</code> to implement by yourself.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;uploadVideo&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">customBrowseAndUpload</span><span class="token punctuation">(</span>insertFn<span class="token operator">:</span> InsertFnType<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// TS syntax</span>
    <span class="token comment">// customBrowseAndUpload(insertFn) {              // JS syntax</span>
        <span class="token comment">// 1. select files by yourself</span>
        <span class="token comment">// 2. upload files, and get video&#39;s url and poster</span>
        <span class="token comment">// 3. insert video</span>
        <span class="token function">insertFn</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> poster<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="code-highlight" tabindex="-1"><a class="header-anchor" href="#code-highlight" aria-hidden="true">#</a> Code Highlight</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>editorConfig<span class="token punctuation">.</span><span class="token constant">MENU_CONF</span><span class="token punctuation">[</span><span class="token string">&#39;codeSelectLang&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    codeLangs<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;css&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;html&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;XML&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;xml&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// others...</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>When you want to edit code language, you can only choose language from <code>editor.getMenuConfig(&#39;codeSelectLang&#39;).codeLangs</code>.You can&#39;t edit it at will!<br> If you want a new language, please commit an issue to us. It needs to change the editor&#39;s source code.</p></div><h2 id="others" tabindex="-1"><a class="header-anchor" href="#others" aria-hidden="true">#</a> Others</h2><p>You can see <a href="#general-way">General-way</a> to change other menus config.</p>`,30);function w(C,F){const e=o("ExternalLinkIcon");return c(),l(r,null,[u,s("p",null,[k,s("a",m,[b,p(e)]),d]),g,s("p",null,[h,s("a",f,[y,p(e)]),v]),x],64)}var S=t(i,[["render",w],["__file","menu-config.html.vue"]]);export{S as default};
